DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardClasses`(
		IN CardID Int
    )
BEGIN
SELECT classes.ID, classes.Name
    FROM classes
    INNER JOIN cardclasses on cardclasses.ClassCD = classes.ID
    WHERE
		cardclasses.CardCD = CardID
    Order by classes.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardColors`(
		IN CardID Int
    )
BEGIN
SELECT colors.ID, colors.Name
    FROM colors
    INNER JOIN cardcolors on cardcolors.ColorCD = colors.ID
    WHERE
		cardcolors.CardCD = CardID
    Order by colors.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardList`(
    )
BEGIN
SELECT card.ID, card.Name, card.CommanderCapable, rarity.name as rarity
    FROM card
    join rarity on card.RarityCD = rarity.ID
    Order by card.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardListFiltered`(
		IN CardName VARCHAR(250)
    )
BEGIN
SELECT card.ID, card.Name, card.CommanderCapable, rarity.name as rarity
    FROM card
    join rarity on card.RarityCD = rarity.ID
    WHERE card.Name  LIKE CONCAT('%', CardName , '%')
    Order by card.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardTribes`(
		IN CardID Int
    )
BEGIN
SELECT tribes.ID, tribes.Name
    FROM tribes
    INNER JOIN cardtribes on cardtribes.TribeCD = tribes.ID
    WHERE
		cardtribes.CardCD = CardID
    Order by tribes.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetCardView`(
		IN CardID Int
    )
BEGIN
SELECT card.*, rarity.name as Rarity, " " as Tribes, " " as Classes, " " as Colors 
    FROM card
    INNER JOIN rarity on rarity.ID = card.RarityCD
    WHERE
      card.ID = CardID;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetClasses`(
    )
BEGIN
SELECT *
    FROM classes
    Order by classes.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetColors`(
    )
BEGIN
SELECT *
    FROM colors
    Order by colors.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetDeckFormats`(
    )
BEGIN
SELECT *
    FROM deckformats
    Order by deckformats.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetMatchTypes`(
    )
BEGIN
SELECT *
    FROM matchtypes
    Order by matchtypes.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPlayerCollection`(
    IN PlayerID BigInt
)
BEGIN
SELECT collection.ID, card.Name, card.CommanderCapable, rarity.name as rarity, collection.CardCD, collection.PlayerCD, deck.Name as Deck
    FROM card
    join rarity on card.RarityCD = rarity.ID
    join collection on card.ID = collection.CardCD
    left join deck on collection.DeckCD = deck.ID
    Where collection.PlayerCD = PlayerID
    Order by card.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPlayerCollectionPlus`(
    IN PlayerID BigInt
)
BEGIN
SELECT collection.ID, card.Name, card.CommanderCapable, rarity.name as rarity, collection.CardCD, collection.PlayerCD
    FROM card
    Join rarity on card.RarityCD = rarity.ID
    Left Join collection on collection.CardCD = card.ID
    Where collection.PlayerCD = 1 
    OR collection.PlayerCD is Null
    Order by card.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPlayerDeck`(
    IN PlayerID BigInt
)
BEGIN
SELECT 
	deck.ID, deck.Name, deckformats.name as Format, card.name as Commander, deck.PlayerCD
FROM 
	deck
inner join 
	deckformats ON deck.FormatCD = deckformats.ID
left join
	cards ON cards.ID = deck.CommanderCD
Where deck.PlayerCD = PlayerID
    Order by deck.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPlayerList`(
    )
BEGIN
SELECT *
    FROM player
    Order by player.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetRarities`(
    )
BEGIN
SELECT *
    FROM rarity
    Order by rarity.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSetCardList`(
    IN SetID BigInt
    )
BEGIN
SELECT card.ID, card.Name, card.CommanderCapable, rarity.name as rarity
    FROM 
		card
    INNER JOIN
        cardsets on cardsets.CardCD = card.ID
	INNER JOIN
        rarity on card.RarityCD = rarity.ID
	WHERE
        cardsets.SetCD = SetID
    Order by card.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSets`(
    )
BEGIN
SELECT *
    FROM sets
    Order by sets.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetTribes`(
    )
BEGIN
SELECT *
    FROM tribes
    Order by tribes.Name;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertFailedLoginAttempt`(
    IN IPAddress varchar(500), UserID varchar(500))
begin
    INSERT INTO `cs470group_project`.`failedloginattempts`
        (`IPAddress`,`UserID`)
    VALUES
       (IPAddress,UserID);
end$$
DELIMITER ;